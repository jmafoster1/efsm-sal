% Generated by the Isabelle to SAL translator
% Version 1.9 released 6 December 2021
% The biggest absolute integer value used is 0
Lift_Controller {n1_ : nznat, n2_ : nznat} : CONTEXT = BEGIN

LABEL : TYPE = DATATYPE
  continit,
  down,
  motorstop,
  opendoor,                                                      %%10
  return,
  startsearch,
  up
END;

STRING : TYPE =
    {NO__1, NO__2, NO__3, NO__4, String__false, String__true,
    String__dummy__};
  
STATE : TYPE =                                                   %%20
    {State__0, State__1, State__2, State__3, State__4, State__5,
    State__6, State__7, State__8, State__9, NULL_STATE};
  
IMPORTING trilean;
IMPORTING value{n1_, n2_, STRING};
IMPORTING option{VALUE};
IMPORTING arithmetic{n1_, n2_, STRING};

input_sequence : CONTEXT = sequence {B_VALUE, ValueBB, 3};
output_sequence : CONTEXT = sequence {B_OPTION, OptionBB, 3};    %%30

lift : MODULE =
  BEGIN
    INPUT label : LABEL
    LOCAL cfstate : STATE
    LOCAL r__1 : OPTION
    LOCAL r__2 : OPTION
    LOCAL r__3 : OPTION
    LOCAL r__4 : OPTION
    INPUT i : input_sequence ! Sequence                          %%40
    OUTPUT o : output_sequence ! Sequence
    INITIALIZATION [
        cfstate = State__0 AND
        o = output_sequence ! empty AND
        r__1 = None AND
        r__2 = None AND
        r__3 = None AND
        r__4 = Some(Num(1))
      -->
    ]                                                            %%50
    TRANSITION [
      CONTINIT :
          cfstate = State__0 AND label = continit AND
              input_sequence ! size?(i) = 0
        -->
          cfstate' = State__9;
          r__1' = Some(Str(String__true));
          o' = output_sequence ! empty
      []
      MOTORSTOP4 :                                               %%60
          cfstate = State__4 AND label = motorstop AND
              input_sequence ! size?(i) = 2 AND
              gval(value_eq(r__1, Some(Str(String__true)))) AND
              gval(value_eq(Some(i(0)),
              Some(Str(String__true)))) AND
              gval(value_eq(Some(i(1)), Some(Str(String__true))))
        -->
          cfstate' = State__8;
          o' = output_sequence !
              insert(Some(Num(0)), output_sequence !               %%70
              insert(Some(Str(NO__4)), output_sequence !
              insert(Some(Str(String__true)), output_sequence !
              empty)))
      []
      MOTORSTOP3 :
          cfstate = State__3 AND label = motorstop AND
              input_sequence ! size?(i) = 2 AND
              gval(value_eq(r__1, Some(Str(String__true)))) AND
              gval(value_eq(Some(i(0)),
              Some(Str(String__true)))) AND                        %%80
              gval(value_eq(Some(i(1)), Some(Str(String__true))))
        -->
          cfstate' = State__7;
          o' = output_sequence !
              insert(Some(Num(0)), output_sequence !
              insert(Some(Str(NO__3)), output_sequence !
              insert(Some(Str(String__true)), output_sequence !
              empty)))
      []
      MOTORSTOP2 :                                               %%90
          cfstate = State__2 AND label = motorstop AND
              input_sequence ! size?(i) = 2 AND
              gval(value_eq(r__1, Some(Str(String__true)))) AND
              gval(value_eq(Some(i(0)),
              Some(Str(String__true)))) AND
              gval(value_eq(Some(i(1)), Some(Str(String__true))))
        -->
          cfstate' = State__6;
          o' = output_sequence !
              insert(Some(Num(0)), output_sequence !               %%100
              insert(Some(Str(NO__2)), output_sequence !
              insert(Some(Str(String__true)), output_sequence !
              empty)))
      []
      MOTORSTOP1 :
          cfstate = State__1 AND label = motorstop AND
              input_sequence ! size?(i) = 2 AND
              gval(value_eq(r__1, Some(Str(String__true)))) AND
              gval(value_eq(Some(i(0)),
              Some(Str(String__true)))) AND                        %%110
              gval(value_eq(Some(i(1)), Some(Str(String__true))))
        -->
          cfstate' = State__5;
          o' = output_sequence !
              insert(Some(Num(0)), output_sequence !
              insert(Some(Str(NO__1)), output_sequence !
              insert(Some(Str(String__true)), output_sequence !
              empty)))
      []
      STARTSEARCH__A :                                           %%120
          cfstate = State__8 AND label = startsearch AND
              input_sequence ! size?(i) = 2 AND
              gval(value_eq(Some(i(0)),
              Some(Str(String__true)))) AND
              gval(value_eq(Some(i(1)), Some(Str(String__false))))
        -->
          cfstate' = State__9;
          o' = output_sequence ! empty
      []
      STARTSEARCH__B :                                           %%130
          cfstate = State__7 AND label = startsearch AND
              input_sequence ! size?(i) = 2 AND
              gval(value_eq(Some(i(0)),
              Some(Str(String__true)))) AND
              gval(value_eq(Some(i(1)), Some(Str(String__false))))
        -->
          cfstate' = State__9;
          o' = output_sequence ! empty
      []
      STARTSEARCH__C :                                           %%140
          cfstate = State__6 AND label = startsearch AND
              input_sequence ! size?(i) = 2 AND
              gval(value_eq(Some(i(0)),
              Some(Str(String__true)))) AND
              gval(value_eq(Some(i(1)), Some(Str(String__false))))
        -->
          cfstate' = State__9;
          o' = output_sequence ! empty
      []
      STARTSEARCH__D :                                           %%150
          cfstate = State__5 AND label = startsearch AND
              input_sequence ! size?(i) = 2 AND
              gval(value_eq(Some(i(0)),
              Some(Str(String__true)))) AND
              gval(value_eq(Some(i(1)), Some(Str(String__false))))
        -->
          cfstate' = State__9;
          o' = output_sequence ! empty
      []
      OPENDOOR4 :                                                %%160
          cfstate = State__8 AND label = opendoor AND
              input_sequence ! size?(i) = 1 AND
              gval(value_eq(Some(i(0)), Some(Str(String__true))))
        -->
          cfstate' = State__8;
          o' = output_sequence !
              insert(Some(Str(String__true)), output_sequence !
              insert(Some(Str(NO__4)), output_sequence ! empty))
      []
      OPENDOOR3 :                                                %%170
          cfstate = State__7 AND label = opendoor AND
              input_sequence ! size?(i) = 1 AND
              gval(value_eq(Some(i(0)), Some(Str(String__true))))
        -->
          cfstate' = State__7;
          o' = output_sequence !
              insert(Some(Str(String__true)), output_sequence !
              insert(Some(Str(NO__3)), output_sequence ! empty))
      []
      OPENDOOR2 :                                                %%180
          cfstate = State__6 AND label = opendoor AND
              input_sequence ! size?(i) = 1 AND
              gval(value_eq(Some(i(0)), Some(Str(String__true))))
        -->
          cfstate' = State__6;
          o' = output_sequence !
              insert(Some(Str(String__true)), output_sequence !
              insert(Some(Str(NO__2)), output_sequence ! empty))
      []
      OPENDOOR1 :                                                %%190
          cfstate = State__5 AND label = opendoor AND
              input_sequence ! size?(i) = 1 AND
              gval(value_eq(Some(i(0)), Some(Str(String__true))))
        -->
          cfstate' = State__5;
          o' = output_sequence !
              insert(Some(Str(String__true)), output_sequence !
              insert(Some(Str(NO__1)), output_sequence ! empty))
      []
      RETURN4 :                                                  %%200
          cfstate = State__9 AND label = return AND
              input_sequence ! size?(i) = 0 AND
              gval(value_eq(r__4, Some(Str(NO__4))))
        -->
          cfstate' = State__4;
          o' = output_sequence ! empty
      []
      RETURN3 :
          cfstate = State__9 AND label = return AND
              input_sequence ! size?(i) = 0 AND                    %%210
              gval(value_eq(r__4, Some(Str(NO__3))))
        -->
          cfstate' = State__3;
          o' = output_sequence ! empty
      []
      RETURN2 :
          cfstate = State__9 AND label = return AND
              input_sequence ! size?(i) = 0 AND
              gval(value_eq(r__4, Some(Str(NO__2))))
        -->                                                      %%220
          cfstate' = State__2;
          o' = output_sequence ! empty
      []
      RETURN1 :
          cfstate = State__9 AND label = return AND
              input_sequence ! size?(i) = 0 AND
              gval(value_eq(r__4, Some(Str(NO__1))))
        -->
          cfstate' = State__1;
          o' = output_sequence ! empty                           %%230
      []
      DOWN43STOP :
          cfstate = State__4 AND label = down AND
              input_sequence ! size?(i) = 3 AND
              gval(value_eq(r__2, Some(Str(NO__2)))) AND
              gval(value_eq(r__1, Some(Str(String__false)))) AND
              gval(value_eq(Some(i(0)),
              Some(Str(String__true)))) AND
              gval(value_eq(Some(i(1)),
              Some(Str(String__true)))) AND                        %%240
              gval(value_eq(Some(i(2)), Some(Str(String__true))))
        -->
          cfstate' = State__3;
          r__4' = Some(Str(NO__3));
          r__1' = Some(Str(String__true));
          o' = output_sequence !
              insert(Some(Str(NO__2)), output_sequence !
              insert(Some(Str(String__true)), output_sequence !
              empty))
      []                                                         %%250
      DOWN43 :
          cfstate = State__4 AND label = down AND
              input_sequence ! size?(i) = 3 AND
              gval(value_eq(r__2, Some(Str(NO__2)))) AND
              gval(value_eq(r__1, Some(Str(String__false)))) AND
              gval(value_eq(Some(i(0)),
              Some(Str(String__true)))) AND
              gval(value_eq(Some(i(1)),
              Some(Str(String__true)))) AND
              gval(value_eq(Some(i(2)), Some(Str(String__false)))) %%260
        -->
          cfstate' = State__3;
          r__4' = Some(Str(NO__3));
          r__1' = Some(Str(String__false));
          o' = output_sequence !
              insert(Some(Str(NO__2)), output_sequence !
              insert(Some(Str(String__false)), output_sequence !
              empty))
      []
      UP34STOP :                                                 %%270
          cfstate = State__3 AND label = up AND
              input_sequence ! size?(i) = 2 AND
              gval(value_eq(r__2, Some(Str(NO__1)))) AND
              gval(value_eq(r__1, Some(Str(String__false)))) AND
              gval(value_eq(Some(i(0)),
              Some(Str(String__true)))) AND
              gval(value_eq(Some(i(1)), Some(Str(String__true))))
        -->
          cfstate' = State__4;
          r__4' = Some(Str(NO__4));                              %%280
          r__1' = Some(Str(String__true));
          o' = output_sequence !
              insert(Some(Str(NO__1)), output_sequence !
              insert(Some(Str(String__true)), output_sequence !
              empty))
      []
      DOWN32STOP :
          cfstate = State__3 AND label = down AND
              input_sequence ! size?(i) = 3 AND
              gval(value_eq(r__2, Some(Str(NO__2)))) AND           %%290
              gval(value_eq(r__1, Some(Str(String__false)))) AND
              gval(value_eq(Some(i(0)),
              Some(Str(String__true)))) AND
              gval(value_eq(Some(i(1)),
              Some(Str(String__true)))) AND
              gval(value_eq(Some(i(2)), Some(Str(String__true))))
        -->
          cfstate' = State__2;
          r__4' = Some(Str(NO__2));
          r__1' = Some(Str(String__true));                       %%300
          o' = output_sequence !
              insert(Some(Str(NO__2)), output_sequence !
              insert(Some(Str(String__true)), output_sequence !
              empty))
      []
      DOWN32 :
          cfstate = State__3 AND label = down AND
              input_sequence ! size?(i) = 3 AND
              gval(value_eq(r__2, Some(Str(NO__2)))) AND
              gval(value_eq(r__1, Some(Str(String__false)))) AND   %%310
              gval(value_eq(Some(i(0)),
              Some(Str(String__true)))) AND
              gval(value_eq(Some(i(1)),
              Some(Str(String__true)))) AND
              gval(value_eq(Some(i(2)), Some(Str(String__false))))
        -->
          cfstate' = State__2;
          r__4' = Some(Str(NO__2));
          r__1' = Some(Str(String__false));
          o' = output_sequence !                                 %%320
              insert(Some(Str(NO__2)), output_sequence !
              insert(Some(Str(String__false)), output_sequence !
              empty))
      []
      UP23STOP :
          cfstate = State__2 AND label = up AND
              input_sequence ! size?(i) = 3 AND
              gval(value_eq(r__2, Some(Str(NO__1)))) AND
              gval(value_eq(r__1, Some(Str(String__false)))) AND
              gval(value_eq(Some(i(0)),                            %%330
              Some(Str(String__true)))) AND
              gval(value_eq(Some(i(1)),
              Some(Str(String__true)))) AND
              gval(value_eq(Some(i(2)), Some(Str(String__true))))
        -->
          cfstate' = State__3;
          r__4' = Some(Str(NO__3));
          r__1' = Some(Str(String__true));
          o' = output_sequence !
              insert(Some(Str(NO__1)), output_sequence !           %%340
              insert(Some(Str(String__true)), output_sequence !
              empty))
      []
      UP23 :
          cfstate = State__2 AND label = up AND
              input_sequence ! size?(i) = 3 AND
              gval(value_eq(r__2, Some(Str(NO__1)))) AND
              gval(value_eq(r__1, Some(Str(String__false)))) AND
              gval(value_eq(Some(i(0)),
              Some(Str(String__true)))) AND                        %%350
              gval(value_eq(Some(i(1)),
              Some(Str(String__true)))) AND
              gval(value_eq(Some(i(2)), Some(Str(String__false))))
        -->
          cfstate' = State__3;
          r__4' = Some(Str(NO__3));
          r__1' = Some(Str(String__false));
          o' = output_sequence !
              insert(Some(Str(NO__1)), output_sequence !
              insert(Some(Str(String__false)), output_sequence !   %%360
              empty))
      []
      DOWN21STOP :
          cfstate = State__2 AND label = down AND
              input_sequence ! size?(i) = 2 AND
              gval(value_eq(r__2, Some(Str(NO__2)))) AND
              gval(value_eq(r__1, Some(Str(String__false)))) AND
              gval(value_eq(Some(i(0)),
              Some(Str(String__true)))) AND
              gval(value_eq(Some(i(1)), Some(Str(String__true))))  %%370
        -->
          cfstate' = State__1;
          r__3' = Some(Str(NO__1));
          r__1' = Some(Str(String__true));
          o' = output_sequence !
              insert(Some(Str(NO__2)), output_sequence !
              insert(Some(Str(String__true)), output_sequence !
              empty))
      []
      UP12STOP :                                                 %%380
          cfstate = State__1 AND label = up AND
              input_sequence ! size?(i) = 3 AND
              gval(value_eq(r__2, Some(Str(NO__1)))) AND
              gval(value_eq(r__1, Some(Str(String__false)))) AND
              gval(value_eq(Some(i(0)),
              Some(Str(String__true)))) AND
              gval(value_eq(Some(i(1)),
              Some(Str(String__true)))) AND
              gval(value_eq(Some(i(2)), Some(Str(String__true))))
        -->                                                      %%390
          cfstate' = State__2;
          r__1' = Some(Str(String__true));
          r__4' = Some(Str(NO__2));
          o' = output_sequence !
              insert(Some(Str(NO__1)), output_sequence !
              insert(Some(Str(String__true)), output_sequence !
              empty))
      []
      UP12 :
          cfstate = State__1 AND label = up AND                  %%400
              input_sequence ! size?(i) = 3 AND
              gval(value_eq(r__2, Some(Str(NO__1)))) AND
              gval(value_eq(r__1, Some(Str(String__false)))) AND
              gval(value_eq(Some(i(0)),
              Some(Str(String__true)))) AND
              gval(value_eq(Some(i(1)),
              Some(Str(String__true)))) AND
              gval(value_eq(Some(i(2)), Some(Str(String__false))))
        -->
          cfstate' = State__2;                                   %%410
          r__4' = Some(Str(NO__2));
          r__1' = Some(Str(String__false));
          o' = output_sequence !
              insert(Some(Str(NO__1)), output_sequence !
              insert(Some(Str(String__false)), output_sequence !
              empty))
      []
      SINK_HOLE :
          ELSE
        -->                                                      %%420
          cfstate' = NULL_STATE;
          o' = output_sequence ! empty
    ]
  END;
END
