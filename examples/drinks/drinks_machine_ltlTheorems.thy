(* Generated by the SAL Theorem to Isabelle Translator *)
(* Version 1.2 released 21 June 2021 *)
theory drinks_machine_ltlTheorems
imports "EFSM.EFSM_LTL" Drinks_Machine_LTL Drinks_Machine_LTL

begin

lemma LTL_r2_not_always_gt_100 :
  "(not (alw (check_exp (Gt (V (Rg 2)) (L (Num 100))))))
(watch drinks trace)"
using LTL_r2_not_always_gt_100 by blast

lemma LTL_nxt_2_means_vend :
  "(alw (nxt (state_eq (Some 2)) impl state_eq (Some 1)))
(watch drinks trace)"
using LTL_nxt_2_means_vend by blast

lemma LTL_costsMoney :
  "(alw (nxt (state_eq (Some 2)) impl
      check_exp (Ge (V (Rg 2)) (L (Num 100)))))
(watch drinks trace)"
using LTL_costsMoney by blast

lemma LTL_costsMoney_aux :
  "(alw (not (check_exp (Ge (V (Rg 2)) (L (Num 100)))) impl
      not (nxt (state_eq (Some 2)))))
(watch drinks trace)"
using LTL_costsMoney_aux by blast

lemma LTL_neverReachS2 :
  "((((label_eq ''select'' aand input_eq [Str ''coke'']) aand
      nxt (label_eq ''coin'' aand input_eq [Num 100])) aand
      nxt (nxt (label_eq ''vend'' aand
      input_eq []))) impl nxt (nxt (nxt (state_eq (Some 2)))))
(watch drinks trace)"
using LTL_neverReachS2 by blast

lemma LTL_drinks_cost_money :
  "(alw (nxt (output_eq [Some (Str drink)]) impl
      check_exp (Ge (V (Rg 2)) (L (Num 100)))))
(watch drinks trace)"
using LTL_drinks_cost_money by blast

lemma LTL_output_vend :
  "(alw ((label_eq ''vend'' aand
      nxt (output_eq [Some d])) impl
      check_exp (Ge (V (Rg 2)) (L (Num 100)))))
(watch drinks trace)"
using LTL_output_vend by blast

end


