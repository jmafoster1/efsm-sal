linkedinltl {N_ : nznat} : CONTEXT = BEGIN

LABEL : TYPE = DATATYPE
  login,
  pdf,
  view
END;

STRING : TYPE =
    {String_4Zof, String_HM8p, String_MNn5, String_OUT_OF_NETWORK, %%10
    String_detailedPDF, String_free, String_friendID, String_name,
    String_otherID, String_pdfDetailed, String_summaryPDF};
  
STATES : TYPE =
    {State_0, State_1, State_2, State_3, State_4, State_5,
    NULL_STATE};
  
value : CONTEXT = value {N_, STRING};
arithmetic : CONTEXT = arithmetic{N_, STRING};
                                                                 %%20
TRILEAN : TYPE = arithmetic ! TRILEAN;
B_VALUE : TYPE =  value ! B_VALUE;
VALUE : TYPE =  value ! VALUE;
value_option : CONTEXT = option {VALUE};

VALUE_OPTION : TYPE =  value_option ! OPTION;

Some : [VALUE -> VALUE_OPTION] = value_option ! Some;
NUM : [value ! int -> VALUE] = value ! NUM;
STR : [STRING -> VALUE] = value ! STR;                           %%30

value_plus : [[VALUE_OPTION, VALUE_OPTION] -> VALUE_OPTION] =
    arithmetic ! value_plus;
value_minus : [[VALUE_OPTION, VALUE_OPTION] -> VALUE_OPTION] =
    arithmetic ! value_minus;
  
value_le : [[VALUE_OPTION, VALUE_OPTION] -> TRILEAN] =
    arithmetic ! value_le;
value_ge : [[VALUE_OPTION, VALUE_OPTION] -> TRILEAN] =
    arithmetic ! value_ge;                                         %%40
value_lt : [[VALUE_OPTION, VALUE_OPTION] -> TRILEAN] =
    arithmetic ! value_lt;
value_gt : [[VALUE_OPTION, VALUE_OPTION] -> TRILEAN] =
    arithmetic ! value_gt;
value_eq : [[VALUE_OPTION, VALUE_OPTION] -> TRILEAN] =
    arithmetic ! value_eq;
  
output_sequence : CONTEXT = sequence {value_option !
    B_OPTION, value_option ! OPTION_BB, 1};
input_sequence : CONTEXT = sequence {B_VALUE, value !            %%50
    VALUE_BB, 1};
gval : [TRILEAN -> BOOLEAN] = LAMBDA(g : TRILEAN) : g =
    arithmetic ! True;
  
check_underflow : [VALUE_OPTION -> BOOLEAN] =
    LAMBDA(v : VALUE_OPTION) : gval(value_ge(v, Some(NUM(0-N_))));
check_overflow : [VALUE_OPTION -> BOOLEAN] =
    LAMBDA(v : VALUE_OPTION) : gval(value_le(v, Some(NUM(N_))));
  
linkedIn : MODULE =                                              %%60
  BEGIN
    INPUT label : LABEL
    LOCAL cfstate : STATES
    INPUT I : input_sequence ! Sequence
    OUTPUT O : output_sequence ! Sequence
    INITIALIZATION [
        cfstate = State_0 AND
        I = input_sequence ! empty AND
        O = output_sequence ! empty
      -->                                                        %%70
    ]
    TRANSITION [
      %% login
      LOGIN :
          cfstate = State_0 AND label = login AND
              input_sequence ! size?(I) = 1 AND
              gval(value_eq(Some(I(1)), Some(STR(String_free))))
        -->
          cfstate' = State_1;
          O' = output_sequence ! empty                           %%80
      []
      %% view
      VIEWFRIEND :
          cfstate = State_1 AND label = view AND
              input_sequence ! size?(I) = 3 AND
              gval(value_eq(Some(I(1)),
              Some(STR(String_friendID)))) AND
              gval(value_eq(Some(I(2)),
              Some(STR(String_name)))) AND
              gval(value_eq(Some(I(3)), Some(STR(String_HM8p))))   %%90
        -->
          cfstate' = State_2;
          O' = output_sequence !
              insert(Some(STR(String_friendID)), output_sequence !
              insert(Some(STR(String_name)), output_sequence !
              insert(Some(STR(String_HM8p)), output_sequence !
              empty)))
      []
      %% view
      VIEWOTHER :                                                %%100
          cfstate = State_1 AND label = view AND
              input_sequence ! size?(I) = 3 AND
              gval(value_eq(Some(I(1)),
              Some(STR(String_otherID)))) AND
              gval(value_eq(Some(I(2)),
              Some(STR(String_name)))) AND
              gval(value_eq(Some(I(3)), Some(STR(String_4Zof))))
        -->
          cfstate' = State_2;
          O' = output_sequence !                                 %%110
              insert(Some(STR(String_otherID)), output_sequence !
              insert(Some(STR(String_name)), output_sequence !
              insert(Some(STR(String_4Zof)), output_sequence !
              empty)))
      []
      %% view
      VIEWOTHEROON :
          cfstate = State_1 AND label = view AND
              input_sequence ! size?(I) = 3 AND
              gval(value_eq(Some(I(1)),                            %%120
              Some(STR(String_otherID)))) AND
              gval(value_eq(Some(I(2)),
              Some(STR(String_OUT_OF_NETWORK)))) AND
              gval(value_eq(Some(I(3)), Some(STR(String_MNn5))))
        -->
          cfstate' = State_3;
          O' = output_sequence !
              insert(Some(STR(String_otherID)), output_sequence !
              insert(Some(STR(String_OUT_OF_NETWORK)),
              output_sequence !                                    %%130
              insert(Some(STR(String_MNn5)), output_sequence !
              empty)))
      []
      %% view
      VIEWOTHERFUZZ :
          cfstate = State_1 AND label = view AND
              input_sequence ! size?(I) = 3 AND
              gval(value_eq(Some(I(1)),
              Some(STR(String_otherID)))) AND
              gval(value_eq(Some(I(2)),                            %%140
              Some(STR(String_name)))) AND
              gval(value_eq(Some(I(3)), Some(STR(String_MNn5))))
        -->
          cfstate' = State_3;
          O' = output_sequence !
              insert(Some(STR(String_otherID)), output_sequence !
              insert(Some(STR(String_name)), output_sequence !
              insert(Some(STR(String_MNn5)), output_sequence !
              empty)))
      []                                                         %%150
      %% pdf
      PDFFRIEND :
          cfstate = State_2 AND label = pdf AND
              input_sequence ! size?(I) = 3 AND
              gval(value_eq(Some(I(1)),
              Some(STR(String_friendID)))) AND
              gval(value_eq(Some(I(2)),
              Some(STR(String_name)))) AND
              gval(value_eq(Some(I(3)), Some(STR(String_HM8p))))
        -->                                                      %%160
          cfstate' = State_4;
          O' = output_sequence !
              insert(Some(STR(String_detailedPDF)),
              output_sequence ! empty)
      []
      %% pdf
      PDFOTHER_A :
          cfstate = State_3 AND label = pdf AND
              input_sequence ! size?(I) = 3 AND
              gval(value_eq(Some(I(1)),                            %%170
              Some(STR(String_otherID)))) AND
              gval(value_eq(Some(I(2)),
              Some(STR(String_name)))) AND
              gval(value_eq(Some(I(3)), Some(STR(String_4Zof))))
        -->
          cfstate' = State_4;
          O' = output_sequence !
              insert(Some(STR(String_detailedPDF)),
              output_sequence ! empty)
      []                                                         %%180
      %% pdf
      PDFOTHER_B :
          cfstate = State_2 AND label = pdf AND
              input_sequence ! size?(I) = 3 AND
              gval(value_eq(Some(I(1)),
              Some(STR(String_otherID)))) AND
              gval(value_eq(Some(I(2)),
              Some(STR(String_name)))) AND
              gval(value_eq(Some(I(3)), Some(STR(String_4Zof))))
        -->                                                      %%190
          cfstate' = State_4;
          O' = output_sequence !
              insert(Some(STR(String_detailedPDF)),
              output_sequence ! empty)
      []
      %% pdf
      PDFOTHEROON :
          cfstate = State_3 AND label = pdf AND
              input_sequence ! size?(I) = 3 AND
              gval(value_eq(Some(I(1)),                            %%200
              Some(STR(String_otherID)))) AND
              gval(value_eq(Some(I(2)),
              Some(STR(String_OUT_OF_NETWORK)))) AND
              gval(value_eq(Some(I(3)), Some(STR(String_MNn5))))
        -->
          cfstate' = State_5;
          O' = output_sequence !
              insert(Some(STR(String_summaryPDF)),
              output_sequence ! empty)
      []                                                         %%210
      SINK_HOLE :
          ELSE
        -->
          cfstate' = NULL_STATE
    ]
  END;
END
