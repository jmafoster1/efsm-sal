%The biggest absolute integer value used is 0
xxxlinkedin_ext_fixed {n_ : nznat} : CONTEXT = BEGIN

LABEL : TYPE = DATATYPE
  login,
  pdf,
  view
END;

STRING : TYPE =                                                  %%10
    {String__4zoF, String__HM8p, String__MNn5,
    String__OUT_OF_NETWORK, String__detailed_pdf_of_friendID,
    String__detailed_pdf_of_otherID, String__free,
    String__friendID, String__name, String__otherID, String__paid,
    String__summary_pdf_of_otherID, String__dummy__};
  
STATE : TYPE =
    {State__0, State__1, State__2, State__3, State__4, State__5,
    State__6, State__7, NULL_STATE};
                                                                 %%20
IMPORTING trilean;
IMPORTING value{n_, STRING};
IMPORTING option{VALUE};
IMPORTING arithmetic{n_, STRING};

output_sequence : CONTEXT = sequence {B_OPTION, OptionBB, 1};
input_sequence : CONTEXT = sequence {B_VALUE, ValueBB, 3};

linkedIn : MODULE =
  BEGIN                                                          %%30
    INPUT label : LABEL
    LOCAL cfstate : STATE
    LOCAL r__1 : OPTION
    INPUT i : input_sequence ! Sequence
    OUTPUT o : output_sequence ! Sequence
    INITIALIZATION [
        cfstate = State__0 AND
        o = output_sequence ! empty AND
        r__1 = None
      -->                                                        %%40
    ]
    TRANSITION [
      LOGIN :
          cfstate = State__0 AND label = login AND
              input_sequence ! size?(i) = 1
        -->
          cfstate' = State__1;
          r__1' = Some(i(0));
          o' = output_sequence ! empty
      []                                                         %%50
      VIEW :
          cfstate = State__1 AND label = view AND
              input_sequence ! size?(i) = 3 AND
              value_eq(i(0), Some(Str(String__friendID))) AND
              value_eq(i(1), Some(Str(String__name))) AND
              value_eq(i(2), Some(Str(String__HM8p)))
        -->
          cfstate' = State__2;
          o' = output_sequence ! empty
      []                                                         %%60
      VIEW1 :
          cfstate = State__1 AND label = view AND
              input_sequence ! size?(i) = 3 AND
              value_eq(r__1, Some(Str(String__free))) AND
              value_eq(i(0), Some(Str(String__otherID))) AND
              value_eq(i(1),
              Some(Str(String__OUT_OF_NETWORK))) AND
              value_eq(i(2), Some(Str(String__MNn5)))
        -->
          cfstate' = State__4;                                   %%70
          o' = output_sequence ! empty
      []
      VIEW2 :
          cfstate = State__1 AND label = view AND
              input_sequence ! size?(i) = 3 AND
              value_eq(r__1, Some(Str(String__free))) AND
              value_eq(i(0), Some(Str(String__otherID))) AND
              value_eq(i(1), Some(Str(String__name))) AND
              value_eq(i(2), Some(Str(String__4zoF)))
        -->                                                      %%80
          cfstate' = State__4;
          o' = output_sequence ! empty
      []
      VIEW3 :
          cfstate = State__1 AND label = view AND
              input_sequence ! size?(i) = 3 AND
              value_eq(r__1, Some(Str(String__paid))) AND
              value_eq(i(0), Some(Str(String__otherID))) AND
              value_eq(i(1), Some(Str(String__name))) AND
              value_eq(i(2), Some(Str(String__MNn5)))              %%90
        -->
          cfstate' = State__6;
          o' = output_sequence ! empty
      []
      PDF :
          cfstate = State__2 AND label = pdf AND
              input_sequence ! size?(i) = 3 AND
              value_eq(i(0), Some(Str(String__friendID))) AND
              value_eq(i(1), Some(Str(String__name))) AND
              value_eq(i(2), Some(Str(String__HM8p)))              %%100
        -->
          cfstate' = State__3;
          o' = output_sequence !
              insert(Some(Str(String__detailed_pdf_of_friendID)),
              output_sequence ! empty)
      []
      PDF1 :
          cfstate = State__4 AND label = pdf AND
              input_sequence ! size?(i) = 3 AND
              value_eq(i(0), Some(Str(String__otherID))) AND       %%110
              value_eq(i(1),
              Some(Str(String__OUT_OF_NETWORK))) AND
              value_eq(i(2), Some(Str(String__MNn5)))
        -->
          cfstate' = State__5;
          o' = output_sequence !
              insert(Some(Str(String__summary_pdf_of_otherID)),
              output_sequence ! empty)
      []
      PDF2 :                                                     %%120
          cfstate = State__6 AND label = pdf AND
              input_sequence ! size?(i) = 3 AND
              value_eq(i(0), Some(Str(String__otherID))) AND
              value_eq(i(1), Some(Str(String__name))) AND
              value_eq(i(2), Some(Str(String__4zoF)))
        -->
          cfstate' = State__7;
          o' = output_sequence !
              insert(Some(Str(String__detailed_pdf_of_otherID)),
              output_sequence ! empty)                             %%130
      []
      SINK_HOLE :
          ELSE
        -->
          cfstate' = NULL_STATE
    ]
  END;
  LTL_neverDetailed : THEOREM linkedIn |-
    label = login AND
        i = input_sequence !                                       %%140
        insert(Str(String__free), input_sequence ! empty) =>
        X(G(label = pdf AND
        gval(value_eq(i(0), Some(Str(String__otherID)))) =>
        NOT (X(o = output_sequence !
        insert(Some(Str(String__detailed_pdf_of_otherID)),
        output_sequence ! empty)))));
      
END
