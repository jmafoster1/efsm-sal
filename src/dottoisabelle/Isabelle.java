package dottoisabelle;

import static dottoisabelle.Generator.*;
import java.nio.file.Files;
import java.nio.file.Path;

/**
 * Deals with the Isabelle source file and associated structures
 * @author Siobhan
 */
public class Isabelle {
    
    final String GENERATED_MARKER = "XXDOTXX";
    final String SUFFIX = ".thy";
     
    //::::::::::::::::::::::::::: The Internal Representation
    
    private String fileName;
    private Path isabelleOutputFile;
    
    Isabelle (Path salSource) throws DotException  { 
        String name = salSource.getFileName().toString();
        name = name.substring(0, name.length()-4);        
        while  (  Files.exists(salSource.getParent().resolve(name+SUFFIX))  )
            name = GENERATED_MARKER+name;
        
        fileName = name;
        isabelleOutputFile = salSource.getParent().resolve(fileName+SUFFIX);
    }
    
    //::::::::::::::::::::::::::: Output to Isobelle 
    
    void outputFrom(Dot dot) throws DotException  { 
        startIsabelleOutput(isabelleOutputFile);        
        outputLine("(* Generated by the Dot to Isabelle Translator *)");
        outputLine("(* "+ Translator.VERSION + " *)");
        
        outputLine(Token.THEORY, fileName);
        outputLine("imports", Token.OPENING_QUOTE, "Extended_Finite_State_Machines.EFSM", 
                Token.CLOSING_QUOTE);
        outputLine(Token.BEGIN);
        
        outputNewLine();
        
        for (Graph g : dot.graphs())
            g.outputInIsabelle();
        
        outputLine(Token.END);

        finishIsabelleOutputSuccessfully(true);

    }
    
}
